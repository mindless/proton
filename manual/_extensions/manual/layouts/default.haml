!!!
%html
  %head
    %title= page.title

    %meta(charset='UTF-8')
    -# Use the latest IE engine, or Chrome frame.
    %meta(http-equiv='X-UA-Compatible' content='IE=edge,chrome=1')

    -# Mobile viewport optimization. j.mp/bplateviewport
    %meta(name='viewport' content='width=device-width, initial-scale=1.0')

    -# Standard SEO meta
    - if page.meta.keywords
      %meta{:name => 'keywords', :content => page.meta.keywords}
    - if page.meta.description
      %meta{:name => 'description', :content => page.meta.description}

    %link{:rel => 'stylesheet', :href => rel('/style.css')+"?#{File.mtime(Proton::Page['/style.css'].file).to_i}"}

  %body
    #top
      %a#logo{href: rel('/')}
        = Hyde::Page['/'].title

    #area
      #content
        %div.c
          #crumbs
            - page.breadcrumbs[0..-2].each do |p|
              %a{href: rel(p.path)}= p
              %span.gt!= "&rarr;"

            %strong= page

          %hgroup
            - if page.meta.layout
              %p.type= page.meta.layout.capitalize
            %h1= page.title
            - if page.meta.brief
              %h5= page.meta.brief

          .content
            != yield

            - children = page_children(page)
            - page_types.each do |type|
              - if children[type] && children[type].any?
                %h3= type.to_s.gsub('_', ' ').capitalize

                %ul.section
                  - children[type].each do |method|
                    %li
                      %a{href: rel(method.path)}= method.title
                      - unless method.meta.brief.to_s.empty?
                        %span.brief= method.meta.brief

        %nav#nav
          - parent = (page.children.any? ? page : (page.parent || page))

          - if parent.parent
            %ul
              %li
                %a{href: rel(parent.parent.path)}
                  != "&larr;"
                  = parent.parent

          %ul
            %li
              %a{href: rel(parent.path), class: ('active' if parent.path == page.path)}= parent
              - children = parent.children.select { |p| p.html? }
              - if children.any?
                %ul
                  - children.each do |pp|
                    %li
                      %a{href: rel(pp.path), class: ('active' if pp.path == page.path)}= pp


    %script{src: 'http://cachedcommons.org/cache/prettify/1.0.0/javascripts/prettify-min.js', type: 'text/javascript'}
    %script{src: 'http://cdnjs.cloudflare.com/ajax/libs/jquery/1.6.2/jquery.min.js', type: 'text/javascript'}
    :javascript
      $(function () {
        $("pre").each(function() {
          var r = /\[(.*?)\s*\((.*?)\)\]\n*/;
          var m = $(this).text().match(r);

          $(this).addClass('prettyprint');

          if (m) {
            var file = m[1];
            var type = m[2];
            $(this).addClass('lang-'+type);

            if (file.length) {
              $(this).addClass('has-caption');
              $(this).prepend($("<h5 class='caption'>").text(file));
            }

            $(this).html($(this).html().replace(r, ''));
          }
        });

        prettyPrint();
      });
  
